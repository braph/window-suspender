# vim: filetype=sh
# =============================================================================
# Configuration file for window-suspender
# =============================================================================
#
# SYNTAX
#   - Comments start with '#' and last to the next newline.
#   - Rules have the form:
#     (condition) {
#       command;
#       ...
#     }
#   - Numbers and keywords (like `state`, `stackposition`, `return`, etc ...)
#     must NOT be quoted.
#   - Strings have to be quoted in double or single quotes.
#     Currently no escape-mechanisms are provided, so you have to put the string
#     in single quotes if it contains a double quote and vice versa.
#     If your string contains both characters ... well, bad luck!
#
#  CONDITIONS
#
#    Checking for window states:
#      (state == <STATE>), (state != <STATE>)
#
#      Available window states:
#        minimized
#        maximized_horizontally
#        maximized_vertically
#        shaded
#        skip_pager
#        skip_tasklist
#        hidden
#        fullscreen
#        demands_attention
#        above
#        below
#        inactive_workspace
#        sticky
#
#
#    Checking for window type:
#      (type == <TYPE>), (type != <TYPE>)
#
#      Available window types:
#        desktop
#        dialog
#        dock
#        menu
#        normal
#        splashscreen
#        toolbar
#        utility
#
#
#    String or RegEx matching:
#      (<FIELD> == <STRING>), (<FIELD> != <STRING>),
#      (<FIELD> contains <STRING>),
#      (<FIELD> =~ <REGEX>), (<FIELD> !~ <REGEX>)
#
#      Available fields for string comparison
#        title
#        role
#        groupname
#        classname
#        iconname
#        workspace
#
#
#    Matching against numeric expressions:
#      (stackposition <OPERATOR> <NUMBER>),
#      (workspace_number <OPERATOR> <NUMBER>)
#
#      Available operators:
#        ==  !=  <=  >=  <  >
#
#
#  COMMANDS
#
#     return
#       Immediately stop further processing.
#
#     print <STRING>
#       Prints STRING with a trailing newline.
#
#     system <STRING>
#       Executes STRING in a shell. Can also be used inside a conditional.
#
#     suspend [--suspend-delay=<MILIS>] [--refresh-delay=<MILIS>] [--refresh-duration=<MILIS>]
#       Suspends the window.
#
#     TODO: add actions (maximize, make_above, ...)
#
#
#  ENVIROMENT FOR SYSTEM COMMAND
#
#     Following environment variables are set when using `system`:
#       $WINDOW_TITLE
#       $WINDOW_CLASS
#       $WINDOW_GROUP
#       $WINDOW_TYPE
#       $WINDOW_ROLE
#       $WINDOW_ICON_NAME
#       $WINDOW_STATE - Comma separated list of states
#       $WINDOW_PID
#       $WINDOW_XID
#       $WINDOW_STACKPOSITION
#       $WINDOW_WORKSPACE
#       $WINDOW_WORKSPACE_NUMBER
#       $WINDOW_X / $WINDOW_Y / $WINDOW_WIDTH / $WINDOW_HEIGHT
#       $WINDOW_HOOK
#    These window state variables are set to "0" or "1":
#       $WINDOW_IS_MINIMIZED
#       $WINDOW_IS_MAXIMIZED_HORIZONTALLY
#       $WINDOW_IS_MAXIMIZED_VERTICALLY
#       $WINDOW_IS_SHADED
#       $WINDOW_IS_SKIP_PAGER
#       $WINDOW_IS_SKIP_TASKLIST
#       $WINDOW_IS_STICKY
#       $WINDOW_IS_HIDDEN
#       $WINDOW_IS_FULLSCREEN
#       $WINDOW_IS_DEMANDS_ATTENTION
#       $WINDOW_IS_ABOVE
#       $WINDOW_IS_BELOW
#       $WINDOW_IS_INACTIVE_WORKSPACE
#
#
#  TIPS
#    - Use the xprop or the wnckprop command to obtain information of a window
#    - Config is best viewed with shell syntax (at least in vim)
#    - A small refresh (1ms) on every second is recommended, since X11 applications
#      need to be running for working with the clipboard.
#
#
#  GOOD LUCK!
# =============================================================================

# When suspending or resuming a window, also kill those subprocesses:
process 'bnox' has children 'chrome-sandbox';
process 'chrome-sandbox' has children 'bnox';
# 1) The bnox browser has a `chrome-sandbox` subprocess.
# 2) The `chrome-sandbox` process has `bnox` subprocesses again.
# $ pstree -p (simplified)
#   bnox(1008)-+
#               `-chrome-sandbox(1011)-+
#                                       `-bnox(1892)

# Keep webcam window always above
(classname == 'mpv' && title =~ '\.jpg\?[0-9]{3,}') {
  (hook == opened) {
    make_above;
  }
}

# Never suspend media players
(classname == 'mpv' || classname == 'vlc') {
  return;
}

# Never suspend windows in these states
(state == above || state == sticky) {
  return;
}

# Never suspend a browser with an open Youtube tab
(classname == 'bnox' && title contains "YouTube") {
  return;
}

# When a game is opened, stop all downloads and continue them when its closed.
# (sudo required for stopping processes of the package manager).
(classname == 'openarena.x86_64') {
  (hook == opened) {
    system 'sudo killall --verbose -STOP wget';
  }

  (hook == closed) {
    system 'sudo killall --verbose -CONT wget';
  }
}

# Minimized windows and windows on inactive workspaces shall be refreshed every minute.
(state == minimized || state == inactive_workspace) {
  suspend --refresh-delay 60000;
  return;
}

# Suspend windows that are not directly in the foreground
(stackposition >= 1) {
  suspend --suspend-delay 1000 --refresh-delay 1000 --refresh-duration 1;
  return;
}

return;

system 'env|grep WINDOW';
system 'echo PID=$WINDOW_PID class=$WINDOW_CLASS, group=$WINDOW_GROUP [$WINDOW_DESKTOP]{$WINDOW_STACKPOSITION} $WINDOW_TITLE type=$WINDOW_TYPE states=$WINDOW_STATE';

